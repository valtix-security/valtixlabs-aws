AWSTemplateFormatVersion: 2010-09-09
Description: "Prepare customer environment by adding a VPC, subnets, security-groups etc"
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: "Environment"
        Parameters:
          - Prefix
          - ValtixResources
          - BastionHost
      -
        Label:
          default: "VPC Configuration"
        Parameters:
          - VPCCidr
          - SubnetBits
          - Zone1
          - Zone2
      -
        Label:
          default: "EC2 Configuration"
        Parameters:
          - AppAMI
          - InstanceType
          - KeyPairName
          - SSHLocation
    ParameterLabels:
      Prefix:
        default: "Prefix"
      VPCCidr:
        default: "VPC CIDR"
      SubnetBits:
        default: "Subnet Bits"
      Zone1:
        default: "Availability Zone 1"
      Zone2:
        default: "Availability Zone 2"
      AppAMI:
        default: "AMI for App Instance"
      KeyPairName:
        default: "EC2 Key Pair"
      ValtixResources:
        default: "Create Valtix Resources"
      InstanceType:
        default: "Instance Type"
      BastionHost:
        default: "Create Bastion Host"
Parameters:
    Prefix:
        Description: Name tag prefix that's added to all the resources
        Type: String
    VPCCidr:
        Description: VPC CidrBlock
        Type: String
        Default: 10.0.0.0/16
    SubnetBits:
        Description: Number of bits in the subnet (eg. For /24 its 8, /25 its /7, /26 its /6) 32 minus required bits in subnet mask)
        Type: String
        Default: 8
    Zone1:
        Description: Availability Zone 1
        Type: AWS::EC2::AvailabilityZone::Name
    Zone2:
        Description: Availability Zone 2
        Type: AWS::EC2::AvailabilityZone::Name
    AppAMI:
        Description: AMI to use (valtix-default is Centos 7 image with docker and sample hello world app in us-east-1,2 and us-west-1,2. Use ubuntu-1804 to install Ubuntu 18.04 with sample hello world app.  For other regions provide an AMI). Set to blank if you don't want to create App EC2 instance
        Type: String
        Default: valtix-default
    KeyPairName:
        Description: SSH Keypair Name to use for the App EC2 Instance
        Type: AWS::EC2::KeyPair::KeyName
    ValtixResources:
        Description: Create resources required for Valtix Gateway (subnets, security-groups). Choosing 'No', creates only App
        Type: String
        Default: "yes"
        AllowedValues: ["yes", "no"]
    BastionHost:
        Description: Create bastion host to connect to App instances
        Type: String
        Default: "yes"
        AllowedValues: ["yes", "no"]
    InstanceType:
        Description: EC2 instance type
        Type: String
        Default: t3a.small
        AllowedValues:
        - t2.nano
        - t2.micro
        - t3a.small
        - t3a.medium
        ConstraintDescription: must be a valid EC2 instance type
Mappings:
    AppImage:
        us-east-1:
            ami: ami-00ce9f355aefe8440
            ubuntu1804: ami-00ddb0e5626798373
        us-east-2:
            ami: ami-05a3974d83591c4d7
            ubuntu1804: ami-0dd9f0e7df0f0a138
        us-west-1:
            ami: ami-0817f34c39fc98725
            ubuntu1804: ami-0a741b782c2c8632d
        us-west-2:
            ami: ami-0bd3005085bd65af7
            ubuntu1804: ami-0ac73f33a1888c64a
        ca-central-1:
            ubuntu1804: ami-0e625dfca3e5a33bd
        eu-central-1:
            ubuntu1804: ami-0e1ce3e0deb8896d2
        eu-north-1:
            ubuntu1804: ami-01996625fff6b8fcc
        eu-south-1:
            ubuntu1804: ami-0e82abf811ef58145
        eu-west-1:
            ubuntu1804: ami-0dc8d444ee2a42d8a
        eu-west-2:
            ubuntu1804: ami-0e169fa5b2b2f88ae
        eu-west-3:
            ubuntu1804: ami-089d839e690b09b28
Conditions:
    UseValtixDefaultAMI:
        Fn::Equals:
            - Ref: AppAMI
            - "valtix-default"
    UseUbuntu1804AMI:
        Fn::Equals:
            - Ref: AppAMI
            - "ubuntu1804"
    CreateValtixResources:
        Fn::Equals:
            - Ref: ValtixResources
            - "yes"
    CreateBastion:
        Fn::Equals:
            - Ref: BastionHost
            - "yes"
Resources:
    ValtixVPC:
        Type: "AWS::EC2::VPC"
        Properties:
            CidrBlock:
                Ref: VPCCidr
            Tags:
                - Key: Name
                  Value:
                      Fn::Sub: "${Prefix}-vpc"
    ValtixInternetGateway:
        Type: "AWS::EC2::InternetGateway"
        Properties:
            Tags:
                - Key: Name
                  Value:
                      Fn::Sub: "${Prefix}-igw"
    ValtixIGWAttachment:
        Type: AWS::EC2::VPCGatewayAttachment
        Properties:
            VpcId:
                Ref: ValtixVPC
            InternetGatewayId:
                Ref: ValtixInternetGateway
    ValtixAppsSubnet1:
        Type: AWS::EC2::Subnet
        Properties:
            AvailabilityZone:
                Ref: Zone1
            VpcId:
                Ref: ValtixVPC
            CidrBlock:
                Fn::Select:
                    - 0
                    - Fn::Cidr:
                          - Ref: VPCCidr
                          - 8
                          - Ref: SubnetBits
            Tags:
                - Key: Name
                  Value:
                      Fn::Sub: "${Prefix}-apps1"
    ValtixDatapathSubnet1:
        Type: AWS::EC2::Subnet
        Condition: CreateValtixResources
        Properties:
            MapPublicIpOnLaunch: true
            AvailabilityZone:
                Ref: Zone1
            VpcId:
                Ref: ValtixVPC
            CidrBlock:
                Fn::Select:
                    - 1
                    - Fn::Cidr:
                          - Ref: VPCCidr
                          - 8
                          - Ref: SubnetBits
            Tags:
                - Key: Name
                  Value:
                      Fn::Sub: "${Prefix}-datapath1"
    ValtixMgmtSubnet1:
        Type: AWS::EC2::Subnet
        Condition: CreateValtixResources
        Properties:
            MapPublicIpOnLaunch: true
            AvailabilityZone:
                Ref: Zone1
            VpcId:
                Ref: ValtixVPC
            CidrBlock:
                Fn::Select:
                    - 2
                    - Fn::Cidr:
                          - Ref: VPCCidr
                          - 8
                          - Ref: SubnetBits
            Tags:
                - Key: Name
                  Value:
                      Fn::Sub: "${Prefix}-mgmt1"
    ValtixAppsSubnet2:
        Type: AWS::EC2::Subnet
        Properties:
            AvailabilityZone:
                Ref: Zone2
            VpcId:
                Ref: ValtixVPC
            CidrBlock:
                Fn::Select:
                    - 3
                    - Fn::Cidr:
                          - Ref: VPCCidr
                          - 8
                          - Ref: SubnetBits
            Tags:
                - Key: Name
                  Value:
                      Fn::Sub: "${Prefix}-apps2"
    ValtixBastionSubnet:
        Type: AWS::EC2::Subnet
        Condition: CreateBastion
        Properties:
            AvailabilityZone:
                Ref: Zone1
            VpcId:
                Ref: ValtixVPC
            CidrBlock:
                Fn::Select:
                    - 6
                    - Fn::Cidr:
                            - Ref: VPCCidr
                            - 8
                            - Ref: SubnetBits
            Tags:
                - Key: Name
                  Value:
                      Fn::Sub: "${Prefix}-bastion"
    ValtixDatapathSubnet2:
        Type: AWS::EC2::Subnet
        Condition: CreateValtixResources
        Properties:
            MapPublicIpOnLaunch: true
            AvailabilityZone:
                Ref: Zone2
            VpcId:
                Ref: ValtixVPC
            CidrBlock:
                Fn::Select:
                    - 4
                    - Fn::Cidr:
                          - Ref: VPCCidr
                          - 8
                          - Ref: SubnetBits
            Tags:
                - Key: Name
                  Value:
                      Fn::Sub: "${Prefix}-datapath2"
    ValtixMgmtSubnet2:
        Type: AWS::EC2::Subnet
        Condition: CreateValtixResources
        Properties:
            MapPublicIpOnLaunch: true
            AvailabilityZone:
                Ref: Zone2
            VpcId:
                Ref: ValtixVPC
            CidrBlock:
                Fn::Select:
                    - 5
                    - Fn::Cidr:
                          - Ref: VPCCidr
                          - 8
                          - Ref: SubnetBits
            Tags:
                - Key: Name
                  Value:
                      Fn::Sub: "${Prefix}-mgmt2"
    RouteTableApps1:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId:
                Ref: ValtixVPC
            Tags:
                - Key: Name
                  Value:
                      Fn::Sub: "${Prefix}-apps1"
    RouteTableApps2:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId:
                Ref: ValtixVPC
            Tags:
                - Key: Name
                  Value:
                      Fn::Sub: "${Prefix}-apps2"
    RouteTableBastion:
        Type: AWS::EC2::RouteTable
        Condition: CreateBastion
        Properties:
            VpcId:
                Ref: ValtixVPC
            Tags:
                - Key: Name
                  Value:
                      Fn::Sub: "${Prefix}-bastion"
    InternetRouteApps1:
        Type: AWS::EC2::Route
        Properties:
            DestinationCidrBlock: 0.0.0.0/0
            GatewayId:
                Ref: ValtixInternetGateway
            RouteTableId:
                Ref: RouteTableApps1
    InternetRouteApps2:
        Type: AWS::EC2::Route
        Properties:
            DestinationCidrBlock: 0.0.0.0/0
            GatewayId:
                Ref: ValtixInternetGateway
            RouteTableId:
                Ref: RouteTableApps2
    InternetRouteBastion:
        Type: AWS::EC2::Route
        Condition: CreateBastion
        Properties:
            DestinationCidrBlock: 0.0.0.0/0
            GatewayId:
                Ref: ValtixInternetGateway
            RouteTableId:
                Ref: RouteTableBastion
    AppsSubnetRouteTableAssociation1:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId:
                Ref: RouteTableApps1
            SubnetId:
                Ref: ValtixAppsSubnet1
    AppsSubnetRouteTableAssociation2:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId:
                Ref: RouteTableApps2
            SubnetId:
                Ref: ValtixAppsSubnet2
    BastionSubnetRouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Condition: CreateBastion
        Properties:
            RouteTableId:
                Ref: RouteTableBastion
            SubnetId:
                Ref: ValtixBastionSubnet
    RouteTableDatapath1:
        Type: AWS::EC2::RouteTable
        Condition: CreateValtixResources
        Properties:
            VpcId:
                Ref: ValtixVPC
            Tags:
                - Key: Name
                  Value:
                      Fn::Sub: "${Prefix}-datapath1"
    RouteTableDatapath2:
        Type: AWS::EC2::RouteTable
        Condition: CreateValtixResources
        Properties:
            VpcId:
                Ref: ValtixVPC
            Tags:
                - Key: Name
                  Value:
                      Fn::Sub: "${Prefix}-datapath2"
    InternetRouteDatapath1:
        Type: AWS::EC2::Route
        Condition: CreateValtixResources
        Properties:
            DestinationCidrBlock: 0.0.0.0/0
            GatewayId:
                Ref: ValtixInternetGateway
            RouteTableId:
                Ref: RouteTableDatapath1
    InternetRouteDatapath2:
        Type: AWS::EC2::Route
        Condition: CreateValtixResources
        Properties:
            DestinationCidrBlock: 0.0.0.0/0
            GatewayId:
                Ref: ValtixInternetGateway
            RouteTableId:
                Ref: RouteTableDatapath2
    DatapathSubnetRouteTableAssociation1:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Condition: CreateValtixResources
        Properties:
            RouteTableId:
                Ref: RouteTableDatapath1
            SubnetId:
                Ref: ValtixDatapathSubnet1
    DatapathSubnetRouteTableAssociation2:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Condition: CreateValtixResources
        Properties:
            RouteTableId:
                Ref: RouteTableDatapath2
            SubnetId:
                Ref: ValtixDatapathSubnet2
    RouteTableManagment1:
        Type: AWS::EC2::RouteTable
        Condition: CreateValtixResources
        Properties:
            VpcId:
                Ref: ValtixVPC
            Tags:
                - Key: Name
                  Value:
                      Fn::Sub: "${Prefix}-mgmt1"
    RouteTableManagment2:
        Type: AWS::EC2::RouteTable
        Condition: CreateValtixResources
        Properties:
            VpcId:
                Ref: ValtixVPC
            Tags:
                - Key: Name
                  Value:
                      Fn::Sub: "${Prefix}-mgmt2"
    InternetRouteMgmt1:
        Type: AWS::EC2::Route
        Condition: CreateValtixResources
        Properties:
            DestinationCidrBlock: 0.0.0.0/0
            GatewayId:
                Ref: ValtixInternetGateway
            RouteTableId:
                Ref: RouteTableManagment1
    InternetRouteMgmt2:
        Type: AWS::EC2::Route
        Condition: CreateValtixResources
        Properties:
            DestinationCidrBlock: 0.0.0.0/0
            GatewayId:
                Ref: ValtixInternetGateway
            RouteTableId:
                Ref: RouteTableManagment2
    ManagementSubnetRouteTableAssociation1:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Condition: CreateValtixResources
        Properties:
            RouteTableId:
                Ref: RouteTableManagment1
            SubnetId:
                Ref: ValtixMgmtSubnet1
    ManagementSubnetRouteTableAssociation2:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Condition: CreateValtixResources
        Properties:
            RouteTableId:
                Ref: RouteTableManagment2
            SubnetId:
                Ref: ValtixMgmtSubnet2
    SecurityGroupApps:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupName:
                Fn::Sub: "${Prefix}-apps"
            GroupDescription: "Security group for the apps, used by applications"
            VpcId:
                Ref: ValtixVPC
            SecurityGroupEgress:
                - IpProtocol: -1
                  FromPort: "0"
                  ToPort: "0"
                  CidrIp: 0.0.0.0/0
            SecurityGroupIngress:
                - IpProtocol: tcp
                  FromPort: "22"
                  ToPort: "22"
                  CidrIp: 0.0.0.0/0
                - IpProtocol: tcp
                  FromPort: "80"
                  ToPort: "80"
                  CidrIp: 0.0.0.0/0
                - IpProtocol: tcp
                  FromPort: "8000"
                  ToPort: "8000"
                  CidrIp: 0.0.0.0/0
                - IpProtocol: tcp
                  FromPort: "443"
                  ToPort: "443"
                  CidrIp: 0.0.0.0/0
            Tags:
                - Key: Name
                  Value:
                      Fn::Sub: "${Prefix}-apps"
    SecurityGroupBastion:
        Type: AWS::EC2::SecurityGroup
        Condition: CreateBastion
        Properties:
            GroupName:
                Fn::Sub: "${Prefix}-bastion"
            GroupDescription: "Security group for the bastion host"
            VpcId:
                Ref: ValtixVPC
            SecurityGroupEgress:
                - IpProtocol: -1
                  FromPort: "0"
                  ToPort: "0"
                  CidrIp: 0.0.0.0/0
            SecurityGroupIngress:
                - IpProtocol: tcp
                  FromPort: "22"
                  ToPort: "22"
                  CidrIp: 0.0.0.0/0
            Tags:
                - Key: Name
                  Value:
                      Fn::Sub: "${Prefix}-bastion"
    SecurityGroupDatapath:
        Type: AWS::EC2::SecurityGroup
        Condition: CreateValtixResources
        Properties:
            GroupName:
                Fn::Sub: "${Prefix}-datapath"
            GroupDescription: "Security group for the datapath, ingress traffic to the application hits this security-group"
            VpcId:
                Ref: ValtixVPC
            SecurityGroupIngress:
                - IpProtocol: tcp
                  FromPort: "65534"
                  ToPort: "65534"
                  CidrIp: 0.0.0.0/0
                - IpProtocol: tcp
                  FromPort: "80"
                  ToPort: "80"
                  CidrIp: 0.0.0.0/0
                - IpProtocol: tcp
                  FromPort: "443"
                  ToPort: "443"
                  CidrIp: 0.0.0.0/0
            Tags:
                - Key: Name
                  Value:
                      Fn::Sub: "${Prefix}-datapath"
    SecurityGroupManagement:
        Type: AWS::EC2::SecurityGroup
        Condition: CreateValtixResources
        Properties:
            GroupName:
                Fn::Sub: "${Prefix}-mgmt"
            GroupDescription: "Security group for the mgmt, allows gateway instance communication with the controller"
            VpcId:
                Ref: ValtixVPC
            SecurityGroupEgress:
                - IpProtocol: -1
                  FromPort: "0"
                  ToPort: "0"
                  CidrIp: 0.0.0.0/0
            SecurityGroupIngress:
                - IpProtocol: tcp
                  FromPort: "22"
                  ToPort: "22"
                  CidrIp: 0.0.0.0/0
            Tags:
                - Key: Name
                  Value:
                      Fn::Sub: "${Prefix}-mgmt"
    AppInstance1withValtixDefault:
        Type: AWS::EC2::Instance
        Condition: UseValtixDefaultAMI
        Properties:
            AvailabilityZone:
                Ref: Zone1
            ImageId:
                !FindInMap [AppImage, !Ref "AWS::Region", ami]
            InstanceType:
                Ref: InstanceType
            KeyName:
                Ref: KeyPairName
            NetworkInterfaces:
                - AssociatePublicIpAddress: true
                  DeviceIndex: 0
                  SubnetId:
                      Ref: ValtixAppsSubnet1
                  GroupSet:
                      - Ref: SecurityGroupApps
            Tags:
                - Key: Name
                  Value:
                      Fn::Sub: "${Prefix}-apps-z1"
    AppInstance2withValtixDefault:
        Type: AWS::EC2::Instance
        Condition: UseValtixDefaultAMI
        Properties:
            AvailabilityZone:
                Ref: Zone2
            ImageId:
                !FindInMap [AppImage, !Ref "AWS::Region", ami]
            InstanceType:
                Ref: InstanceType
            KeyName:
                Ref: KeyPairName
            NetworkInterfaces:
                - AssociatePublicIpAddress: true
                  DeviceIndex: 0
                  SubnetId:
                      Ref: ValtixAppsSubnet2
                  GroupSet:
                      - Ref: SecurityGroupApps
            Tags:
                - Key: Name
                  Value:
                      Fn::Sub: "${Prefix}-apps-z2"
    AppInstance1withUbuntu1804:
        Type: AWS::EC2::Instance
        Condition: UseUbuntu1804AMI
        Properties:
            AvailabilityZone:
                Ref: Zone1
            ImageId:
                !FindInMap [AppImage, !Ref "AWS::Region", ubuntu1804]
            InstanceType:
                Ref: InstanceType
            KeyName:
                Ref: KeyPairName
            NetworkInterfaces:
                - AssociatePublicIpAddress: true
                  DeviceIndex: 0
                  SubnetId:
                      Ref: ValtixAppsSubnet1
                  GroupSet:
                      - Ref: SecurityGroupApps
            Tags:
                - Key: Name
                  Value:
                      Fn::Sub: "${Prefix}-apps-z1"
            UserData:
                Fn::Base64: !Sub |
                    #! /bin/bash
                    apt-get update
                    apt-get upgrade -y
                    apt-get install -y apache2
                    cat <<EOF > /var/www/html/index.html
                    <html><body><h1>Hello World</h1>
                    <p>Welcome to App Instance 1</p>
                    </body></html>
                    EOF
    AppInstance2withUbuntu1804:
        Type: AWS::EC2::Instance
        Condition: UseUbuntu1804AMI
        Properties:
            AvailabilityZone:
                Ref: Zone2
            ImageId:
                !FindInMap [AppImage, !Ref "AWS::Region", ubuntu1804]
            InstanceType:
                Ref: InstanceType
            KeyName:
                Ref: KeyPairName
            NetworkInterfaces:
                - AssociatePublicIpAddress: true
                  DeviceIndex: 0
                  SubnetId:
                      Ref: ValtixAppsSubnet2
                  GroupSet:
                      - Ref: SecurityGroupApps
            Tags:
                - Key: Name
                  Value:
                      Fn::Sub: "${Prefix}-apps-z2"
            UserData:
                Fn::Base64: !Sub |
                    #! /bin/bash
                    apt-get update
                    apt-get upgrade -y
                    apt-get install -y apache2
                    cat <<EOF > /var/www/html/index.html
                    <html><body><h1>Hello World</h1>
                    <p>Welcome to App Instance 2</p>
                    </body></html>
                    EOF
    BastionInstance:
        Type: AWS::EC2::Instance
        Condition: CreateBastion
        Properties:
            AvailabilityZone:
                Ref: Zone1
            ImageId:
                !FindInMap [AppImage, !Ref "AWS::Region", ubuntu1804]
            InstanceType:
                Ref: InstanceType
            KeyName:
                Ref: KeyPairName
            NetworkInterfaces:
                - AssociatePublicIpAddress: true
                  DeviceIndex: 0
                  SubnetId:
                      Ref: ValtixBastionSubnet
                  GroupSet:
                      - Ref: SecurityGroupBastion
            Tags:
                - Key: Name
                  Value:
                      Fn::Sub: "${Prefix}-bastion"
            UserData:
                Fn::Base64: !Sub |
                    #! /bin/bash
                    apt-get update
                    apt-get upgrade -y
                    EOF
Outputs:
  AppInstance1withValtixDefaultPrvIp:
    Condition: UseValtixDefaultAMI
    Description: 'AppInstance 1 Private IP'
    Value: !GetAtt AppInstance1withValtixDefault.PrivateIp
  AppInstance2withValtixDefaultPrvIp:
    Condition: UseValtixDefaultAMI
    Description: 'AppInstance 2 Private IP'
    Value: !GetAtt AppInstance2withValtixDefault.PrivateIp
  AppInstance1withUbuntu1804PrvIp:
    Condition: UseUbuntu1804AMI
    Description: 'AppInstance 1 Private IP'
    Value: !GetAtt AppInstance1withUbuntu1804.PrivateIp
  AppInstance2withUbuntu1804PrvIp:
    Condition: UseUbuntu1804AMI
    Description: 'AppInstance 2 Private IP'
    Value: !GetAtt AppInstance2withUbuntu1804.PrivateIp
  BastionInstancePublicIP:
    Condition: CreateBastion
    Description: 'Bastion Public IP'
    Value: !GetAtt BastionInstance.PublicIp
